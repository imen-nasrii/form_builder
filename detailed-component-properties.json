{
  "COMPONENT_TYPES_DETAILED": {
    "GRIDLKP": {
      "description": "Grid Lookup Component - Advanced data grid with lookup capabilities",
      "core_properties": {
        "Id": "string - Unique identifier for the component",
        "Type": "GRIDLKP - Component type identifier", 
        "Label": "string - Display label for the component",
        "DataField": "string - Database field name this component binds to",
        "Entity": "string - Database table/entity name",
        "Width": "string - CSS width value (px, %, em)",
        "Spacing": "string - Margin/spacing value",
        "Required": "boolean - Whether field is mandatory",
        "Inline": "boolean - Display inline with other components",
        "Outlined": "boolean - Show border outline",
        "Value": "any - Current field value"
      },
      "specific_properties": {
        "KeyColumn": "string - Primary key column for lookup",
        "ItemInfo": {
          "type": "object",
          "properties": {
            "MainProperty": "string - Primary display property",
            "DescProperty": "string - Description property",
            "ShowDescription": "boolean - Show description in UI"
          }
        },
        "LoadDataInfo": {
          "type": "object",
          "properties": {
            "DataModel": "string - Data source model name",
            "ColumnsDefinition": {
              "type": "array",
              "items": {
                "DataField": "string - Column data field",
                "Caption": "string - Column display caption",
                "DataType": "string - Data type (STRING, NUMBER, DATE, BOOLEAN)",
                "Visible": "boolean - Column visibility",
                "Width": "string - Column width",
                "Alignment": "string - Text alignment (left, center, right)",
                "Format": "string - Display format pattern"
              }
            }
          }
        },
        "showAliasBox": "boolean - Show alias input box",
        "EntitykeyField": "string - Entity key field name",
        "EndpointOnchange": "boolean - Trigger endpoint on value change",
        "RequestedFields": "array - Fields requested from endpoint",
        "Validations": {
          "type": "array",
          "items": {
            "Id": "string - Validation rule ID",
            "Type": "string - Validation type (ERROR, WARNING, INFO)",
            "ConditionExpression": {
              "Conditions": {
                "type": "array",
                "items": {
                  "RightField": "string - Field to validate against",
                  "Operator": "string - Comparison operator (ISN, ISNN, EQ, NEQ, GT, LT)",
                  "Value": "any - Comparison value",
                  "ValueType": "string - Value type (STRING, NUMBER, DATE)"
                }
              }
            }
          }
        }
      },
      "example": {
        "Id": "FUND_1753145500000",
        "Type": "GRIDLKP",
        "Label": "FUND",
        "DataField": "fund",
        "Entity": "Fndmas",
        "Width": "32",
        "KeyColumn": "fund",
        "ItemInfo": {
          "MainProperty": "fund",
          "DescProperty": "acnam1",
          "ShowDescription": true
        },
        "LoadDataInfo": {
          "DataModel": "Fndmas",
          "ColumnsDefinition": [
            {
              "DataField": "fund",
              "Caption": "Fund ID",
              "DataType": "STRING",
              "Visible": true
            }
          ]
        }
      }
    },
    "LSTLKP": {
      "description": "List Lookup Component - Dropdown list with lookup functionality",
      "core_properties": {
        "Id": "string - Unique identifier",
        "Type": "LSTLKP - Component type",
        "Label": "string - Display label",
        "DataField": "string - Database field name",
        "Entity": "string - Database table name",
        "Width": "string - Component width",
        "Spacing": "string - Component spacing",
        "Required": "boolean - Field requirement",
        "Inline": "boolean - Inline display",
        "Outlined": "boolean - Border outline",
        "Value": "any - Current value"
      },
      "specific_properties": {
        "KeyColumn": "string - Key column for lookup",
        "LoadDataInfo": {
          "DataModel": "string - Data source model",
          "ColumnsDefinition": "array - Column definitions"
        },
        "ItemInfo": {
          "MainProperty": "string - Main display property",
          "DescProperty": "string - Description property", 
          "ShowDescription": "boolean - Show description"
        },
        "EntitykeyField": "string - Entity key field",
        "MainPropItemList": "string - Main property for list items",
        "SecondPropItemList": "string - Secondary property for list items",
        "ShowSecndPropItemList": "boolean - Show secondary property"
      }
    },
    "DATEPICKER": {
      "description": "Date Picker Component - Advanced date selection with validation",
      "core_properties": {
        "Id": "string - Unique identifier",
        "Type": "DATEPICKER - Component type",
        "Label": "string - Display label",
        "DataField": "string - Database field name",
        "Entity": "string - Database table name",
        "Width": "string - Component width",
        "Spacing": "string - Component spacing",
        "Required": "boolean - Field requirement",
        "Inline": "boolean - Inline display",
        "Value": "string - Date value (ISO format)"
      },
      "specific_properties": {
        "EnabledWhen": {
          "type": "object",
          "properties": {
            "LogicalOperator": "string - Logical operator (AND, OR)",
            "Conditions": {
              "type": "array",
              "items": {
                "RightField": "string - Field to check",
                "Operator": "string - Comparison operator",
                "Value": "any - Comparison value",
                "ValueType": "string - Value type"
              }
            }
          }
        },
        "VisibleWhen": "object - Visibility conditions (same structure as EnabledWhen)",
        "MinDate": "string - Minimum allowed date",
        "MaxDate": "string - Maximum allowed date",
        "DateFormat": "string - Display format (MM/DD/YYYY, DD/MM/YYYY, etc.)",
        "Validations": "array - Validation rules with date-specific operators"
      }
    },
    "SELECT": {
      "description": "Select Dropdown Component - Single selection from predefined options",
      "core_properties": {
        "Id": "string - Unique identifier",
        "Type": "SELECT - Component type",
        "Label": "string - Display label",
        "DataField": "string - Database field name",
        "Entity": "string - Database table name",
        "Width": "string - Component width",
        "Outlined": "boolean - Border outline",
        "Value": "any - Selected value"
      },
      "specific_properties": {
        "UserIntKey": "boolean - Use integer keys for options",
        "OptionValues": {
          "type": "object",
          "description": "Key-value pairs for dropdown options",
          "example": {
            "0": "",
            "1": "GNMA I",
            "2": "GNMA II",
            "3": "FNMA"
          }
        },
        "DefaultValue": "any - Default selected value",
        "Placeholder": "string - Placeholder text",
        "MultiSelect": "boolean - Allow multiple selections",
        "SearchEnabled": "boolean - Enable search within options"
      }
    },
    "RADIOGRP": {
      "description": "Radio Group Component - Single selection from radio buttons",
      "core_properties": {
        "Id": "string - Unique identifier",
        "Type": "RADIOGRP - Component type",
        "Label": "string - Display label",
        "DataField": "string - Database field name",
        "Width": "string - Component width",
        "Spacing": "string - Spacing between options",
        "Value": "any - Selected value"
      },
      "specific_properties": {
        "OptionValues": {
          "type": "object",
          "description": "Key-value pairs for radio options",
          "example": {
            "dfCurrent": "DFCURRENT",
            "dfPosting": "DFPOST",
            "dfReval": "DFVAL"
          }
        },
        "Orientation": "string - Layout orientation (horizontal, vertical)",
        "DefaultValue": "any - Default selected option"
      }
    },
    "CHECKBOX": {
      "description": "Checkbox Component - Boolean input with conditional logic",
      "core_properties": {
        "Id": "string - Unique identifier",
        "Type": "CHECKBOX - Component type",
        "Label": "string - Display label",
        "DataField": "string - Database field name",
        "Width": "string - Component width",
        "Value": "boolean - Checked state"
      },
      "specific_properties": {
        "CheckboxValue": "boolean - Value when checked",
        "UncheckedValue": "any - Value when unchecked",
        "EnabledWhen": "object - Enable conditions",
        "CheckedByDefault": "boolean - Default checked state",
        "LabelPosition": "string - Label position (left, right, top, bottom)"
      }
    },
    "GROUP": {
      "description": "Group Container Component - Groups multiple components together",
      "core_properties": {
        "Id": "string - Unique identifier",
        "Type": "GROUP - Component type",
        "Label": "string - Group title",
        "Width": "string - Group width",
        "Spacing": "string - Internal spacing"
      },
      "specific_properties": {
        "isGroup": "boolean - Identifies as group container",
        "ChildFields": {
          "type": "array",
          "description": "Array of child components",
          "items": "object - Child component definition"
        },
        "GroupLayout": "string - Layout type (horizontal, vertical, grid)",
        "Collapsible": "boolean - Can be collapsed",
        "DefaultCollapsed": "boolean - Default collapsed state",
        "BorderStyle": "string - Border style (solid, dashed, none)",
        "BackgroundColor": "string - Background color",
        "Padding": "string - Internal padding"
      }
    },
    "NUMERIC": {
      "description": "Numeric Input Component - Number input with validation",
      "core_properties": {
        "Id": "string - Unique identifier",
        "Type": "NUMERIC - Component type",
        "Label": "string - Display label",
        "DataField": "string - Database field name",
        "Width": "string - Component width",
        "Required": "boolean - Field requirement",
        "Value": "number - Numeric value"
      },
      "specific_properties": {
        "EndpointOnchange": "boolean - Trigger endpoint on change",
        "EndpointDepend": "object - Endpoint dependency conditions",
        "MinValue": "number - Minimum allowed value",
        "MaxValue": "number - Maximum allowed value",
        "DecimalPlaces": "number - Number of decimal places",
        "ThousandsSeparator": "boolean - Show thousands separator",
        "CurrencySymbol": "string - Currency symbol to display",
        "Step": "number - Increment/decrement step value"
      }
    },
    "TEXT": {
      "description": "Text Input Component - Single line text input",
      "core_properties": {
        "Id": "string - Unique identifier",
        "Type": "TEXT - Component type", 
        "Label": "string - Display label",
        "DataField": "string - Database field name",
        "Width": "string - Component width",
        "Required": "boolean - Field requirement",
        "Value": "string - Text value"
      },
      "specific_properties": {
        "MaxLength": "number - Maximum character length",
        "Placeholder": "string - Placeholder text",
        "Pattern": "string - Regex validation pattern",
        "AutoComplete": "string - Browser autocomplete hint",
        "InputMask": "string - Input format mask",
        "CaseSensitive": "boolean - Case sensitivity for validation"
      }
    },
    "TEXTAREA": {
      "description": "Multi-line Text Component - Multi-line text input",
      "core_properties": {
        "Id": "string - Unique identifier",
        "Type": "TEXTAREA - Component type",
        "Label": "string - Display label", 
        "DataField": "string - Database field name",
        "Width": "string - Component width",
        "Value": "string - Text content"
      },
      "specific_properties": {
        "Rows": "number - Number of visible rows",
        "MaxLength": "number - Maximum character length",
        "Placeholder": "string - Placeholder text",
        "ResizeMode": "string - Resize behavior (none, vertical, horizontal, both)",
        "WrapMode": "string - Text wrapping (soft, hard, off)"
      }
    },
    "BUTTON": {
      "description": "Action Button Component - Triggers actions and processes",
      "core_properties": {
        "Id": "string - Unique identifier",
        "Type": "BUTTON - Component type",
        "Label": "string - Button text",
        "Width": "string - Button width"
      },
      "specific_properties": {
        "ButtonType": "string - Button type (submit, reset, button)",
        "ActionType": "string - Action to perform (PROCESS, SAVE, CANCEL)",
        "ConfirmMessage": "string - Confirmation dialog message",
        "EnabledWhen": "object - Enable conditions",
        "IconName": "string - Icon to display",
        "IconPosition": "string - Icon position (left, right)",
        "Variant": "string - Button style variant (primary, secondary, danger)"
      }
    },
    "HIDDEN": {
      "description": "Hidden Field Component - Stores hidden values",
      "core_properties": {
        "Id": "string - Unique identifier",
        "Type": "HIDDEN - Component type",
        "DataField": "string - Database field name",
        "Value": "any - Hidden value"
      },
      "specific_properties": {
        "SystemGenerated": "boolean - Generated by system",
        "Persistent": "boolean - Persist across sessions",
        "EncryptValue": "boolean - Encrypt the stored value"
      }
    },
    "LABEL": {
      "description": "Display Label Component - Shows text and formatting",
      "core_properties": {
        "Id": "string - Unique identifier",
        "Type": "LABEL - Component type",
        "Label": "string - Display text",
        "Width": "string - Label width",
        "Value": "string - Text content"
      },
      "specific_properties": {
        "FontSize": "string - Font size (px, em, rem)",
        "FontWeight": "string - Font weight (normal, bold, etc.)",
        "TextAlign": "string - Text alignment (left, center, right)",
        "Color": "string - Text color (hex, rgb, named)",
        "BackgroundColor": "string - Background color",
        "Border": "string - Border specification"
      }
    },
    "SEPARATOR": {
      "description": "Visual Separator Component - Creates visual dividers",
      "core_properties": {
        "Id": "string - Unique identifier",
        "Type": "SEPARATOR - Component type",
        "Width": "string - Separator width"
      },
      "specific_properties": {
        "LineStyle": "string - Line style (solid, dashed, dotted)",
        "LineWidth": "string - Line thickness",
        "LineColor": "string - Line color",
        "Margin": "string - Margin around separator",
        "Orientation": "string - Orientation (horizontal, vertical)"
      }
    },
    "IMAGE": {
      "description": "Image Display Component - Shows images and graphics",
      "core_properties": {
        "Id": "string - Unique identifier",
        "Type": "IMAGE - Component type",
        "Label": "string - Image label",
        "Width": "string - Image width"
      },
      "specific_properties": {
        "ImageSource": "string - Source type (url, base64, file)",
        "ImageUrl": "string - Image URL or path",
        "AltText": "string - Alternative text for accessibility",
        "Alignment": "string - Image alignment (left, center, right)",
        "BorderRadius": "string - Border radius for rounded corners",
        "ObjectFit": "string - How image fits container (cover, contain, fill)"
      }
    }
  },
  "VALIDATION_OPERATORS": {
    "ISN": "Is Null - Field is empty/null",
    "ISNN": "Is Not Null - Field has a value", 
    "EQ": "Equals - Field equals specific value",
    "NEQ": "Not Equals - Field does not equal specific value",
    "GT": "Greater Than - Field is greater than value",
    "GTE": "Greater Than or Equal - Field is >= value",
    "LT": "Less Than - Field is less than value",
    "LTE": "Less Than or Equal - Field is <= value",
    "CONTAINS": "Contains - Field contains substring",
    "STARTSWITH": "Starts With - Field starts with substring",
    "ENDSWITH": "Ends With - Field ends with substring",
    "IN": "In List - Field value is in provided list",
    "NOTIN": "Not In List - Field value is not in provided list",
    "BETWEEN": "Between - Field value is between two values",
    "REGEX": "Regular Expression - Field matches regex pattern"
  },
  "VALUE_TYPES": {
    "STRING": "Text/string value",
    "NUMBER": "Numeric value (integer or decimal)",
    "DATE": "Date value (ISO format recommended)",
    "BOOLEAN": "True/false boolean value",
    "ARRAY": "Array of values",
    "OBJECT": "Complex object value",
    "NULL": "Null/empty value"
  },
  "LOGICAL_OPERATORS": {
    "AND": "All conditions must be true",
    "OR": "At least one condition must be true",
    "NOT": "Negates the condition result"
  }
}